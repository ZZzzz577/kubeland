/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiV1BuildSettingsBuildSettings,
} from '../models/index';
import {
    ApiV1BuildSettingsBuildSettingsFromJSON,
    ApiV1BuildSettingsBuildSettingsToJSON,
} from '../models/index';

export interface BuildSettingsServiceApplyBuildSettingsRequest {
    applicationId: string;
    apiV1BuildSettingsBuildSettings: ApiV1BuildSettingsBuildSettings;
}

export interface BuildSettingsServiceGetBuildSettingsRequest {
    applicationId: string;
}

/**
 * 
 */
export class BuildSettingsServiceApi extends runtime.BaseAPI {

    /**
     */
    async buildSettingsServiceApplyBuildSettingsRaw(requestParameters: BuildSettingsServiceApplyBuildSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['applicationId'] == null) {
            throw new runtime.RequiredError(
                'applicationId',
                'Required parameter "applicationId" was null or undefined when calling buildSettingsServiceApplyBuildSettings().'
            );
        }

        if (requestParameters['apiV1BuildSettingsBuildSettings'] == null) {
            throw new runtime.RequiredError(
                'apiV1BuildSettingsBuildSettings',
                'Required parameter "apiV1BuildSettingsBuildSettings" was null or undefined when calling buildSettingsServiceApplyBuildSettings().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/v1/build/settings/{applicationId}`;
        urlPath = urlPath.replace(`{${"applicationId"}}`, encodeURIComponent(String(requestParameters['applicationId'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV1BuildSettingsBuildSettingsToJSON(requestParameters['apiV1BuildSettingsBuildSettings']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async buildSettingsServiceApplyBuildSettings(requestParameters: BuildSettingsServiceApplyBuildSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.buildSettingsServiceApplyBuildSettingsRaw(requestParameters, initOverrides);
    }

    /**
     */
    async buildSettingsServiceGetBuildSettingsRaw(requestParameters: BuildSettingsServiceGetBuildSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV1BuildSettingsBuildSettings>> {
        if (requestParameters['applicationId'] == null) {
            throw new runtime.RequiredError(
                'applicationId',
                'Required parameter "applicationId" was null or undefined when calling buildSettingsServiceGetBuildSettings().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/v1/build/settings/{applicationId}`;
        urlPath = urlPath.replace(`{${"applicationId"}}`, encodeURIComponent(String(requestParameters['applicationId'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV1BuildSettingsBuildSettingsFromJSON(jsonValue));
    }

    /**
     */
    async buildSettingsServiceGetBuildSettings(requestParameters: BuildSettingsServiceGetBuildSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV1BuildSettingsBuildSettings> {
        const response = await this.buildSettingsServiceGetBuildSettingsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

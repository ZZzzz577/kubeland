/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiV1GitGitRepo
 */
export interface ApiV1GitGitRepo {
    /**
     * 
     * @type {string}
     * @memberof ApiV1GitGitRepo
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ApiV1GitGitRepo
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ApiV1GitGitRepo
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof ApiV1GitGitRepo
     */
    token?: string;
    /**
     * 
     * @type {Date}
     * @memberof ApiV1GitGitRepo
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ApiV1GitGitRepo
     */
    readonly updatedAt?: Date;
}

/**
 * Check if a given object implements the ApiV1GitGitRepo interface.
 */
export function instanceOfApiV1GitGitRepo(value: object): value is ApiV1GitGitRepo {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function ApiV1GitGitRepoFromJSON(json: any): ApiV1GitGitRepo {
    return ApiV1GitGitRepoFromJSONTyped(json, false);
}

export function ApiV1GitGitRepoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiV1GitGitRepo {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'url': json['url'],
        'token': json['token'] == null ? undefined : json['token'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function ApiV1GitGitRepoToJSON(json: any): ApiV1GitGitRepo {
    return ApiV1GitGitRepoToJSONTyped(json, false);
}

export function ApiV1GitGitRepoToJSONTyped(value?: Omit<ApiV1GitGitRepo, 'createdAt'|'updatedAt'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'url': value['url'],
        'token': value['token'],
    };
}


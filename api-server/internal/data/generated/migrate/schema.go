// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ClustersColumns holds the columns for the "clusters" table.
	ClustersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "delete_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "name", Type: field.TypeString, Size: 64},
		{Name: "description", Type: field.TypeString, Size: 1024, Default: ""},
	}
	// ClustersTable holds the schema information for the "clusters" table.
	ClustersTable = &schema.Table{
		Name:       "clusters",
		Columns:    ClustersColumns,
		PrimaryKey: []*schema.Column{ClustersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "cluster_name",
				Unique:  true,
				Columns: []*schema.Column{ClustersColumns[4]},
			},
		},
	}
	// ClusterConnectionsColumns holds the columns for the "cluster_connections" table.
	ClusterConnectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "delete_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "address", Type: field.TypeString, Size: 512},
		{Name: "type", Type: field.TypeUint8},
		{Name: "ca", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "cert", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "key", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "token", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "cluster_id", Type: field.TypeUint64, Unique: true},
	}
	// ClusterConnectionsTable holds the schema information for the "cluster_connections" table.
	ClusterConnectionsTable = &schema.Table{
		Name:       "cluster_connections",
		Columns:    ClusterConnectionsColumns,
		PrimaryKey: []*schema.Column{ClusterConnectionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cluster_connections_clusters_connection",
				Columns:    []*schema.Column{ClusterConnectionsColumns[10]},
				RefColumns: []*schema.Column{ClustersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "clusterconnection_cluster_id",
				Unique:  false,
				Columns: []*schema.Column{ClusterConnectionsColumns[10]},
			},
			{
				Name:    "clusterconnection_address",
				Unique:  true,
				Columns: []*schema.Column{ClusterConnectionsColumns[4]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ClustersTable,
		ClusterConnectionsTable,
	}
)

func init() {
	ClusterConnectionsTable.ForeignKeys[0].RefTable = ClustersTable
}

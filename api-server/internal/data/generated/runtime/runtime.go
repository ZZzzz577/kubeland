// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"api-server/internal/data/generated/application"
	"api-server/internal/data/generated/cluster"
	"api-server/internal/data/generated/clusterconnection"
	"api-server/internal/data/generated/imagerepo"
	"api-server/internal/data/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	applicationMixin := schema.Application{}.Mixin()
	applicationMixinHooks1 := applicationMixin[1].Hooks()
	application.Hooks[0] = applicationMixinHooks1[0]
	applicationMixinInters1 := applicationMixin[1].Interceptors()
	application.Interceptors[0] = applicationMixinInters1[0]
	applicationMixinFields0 := applicationMixin[0].Fields()
	_ = applicationMixinFields0
	applicationFields := schema.Application{}.Fields()
	_ = applicationFields
	// applicationDescCreatedAt is the schema descriptor for created_at field.
	applicationDescCreatedAt := applicationMixinFields0[0].Descriptor()
	// application.DefaultCreatedAt holds the default value on creation for the created_at field.
	application.DefaultCreatedAt = applicationDescCreatedAt.Default.(func() time.Time)
	// applicationDescUpdatedAt is the schema descriptor for updated_at field.
	applicationDescUpdatedAt := applicationMixinFields0[1].Descriptor()
	// application.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	application.DefaultUpdatedAt = applicationDescUpdatedAt.Default.(func() time.Time)
	// application.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	application.UpdateDefaultUpdatedAt = applicationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// applicationDescName is the schema descriptor for name field.
	applicationDescName := applicationFields[1].Descriptor()
	// application.NameValidator is a validator for the "name" field. It is called by the builders before save.
	application.NameValidator = func() func(string) error {
		validators := applicationDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// applicationDescDescription is the schema descriptor for description field.
	applicationDescDescription := applicationFields[2].Descriptor()
	// application.DefaultDescription holds the default value on creation for the description field.
	application.DefaultDescription = applicationDescDescription.Default.(string)
	// application.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	application.DescriptionValidator = applicationDescDescription.Validators[0].(func(string) error)
	clusterMixin := schema.Cluster{}.Mixin()
	clusterMixinHooks1 := clusterMixin[1].Hooks()
	cluster.Hooks[0] = clusterMixinHooks1[0]
	clusterMixinInters1 := clusterMixin[1].Interceptors()
	cluster.Interceptors[0] = clusterMixinInters1[0]
	clusterMixinFields0 := clusterMixin[0].Fields()
	_ = clusterMixinFields0
	clusterFields := schema.Cluster{}.Fields()
	_ = clusterFields
	// clusterDescCreatedAt is the schema descriptor for created_at field.
	clusterDescCreatedAt := clusterMixinFields0[0].Descriptor()
	// cluster.DefaultCreatedAt holds the default value on creation for the created_at field.
	cluster.DefaultCreatedAt = clusterDescCreatedAt.Default.(func() time.Time)
	// clusterDescUpdatedAt is the schema descriptor for updated_at field.
	clusterDescUpdatedAt := clusterMixinFields0[1].Descriptor()
	// cluster.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	cluster.DefaultUpdatedAt = clusterDescUpdatedAt.Default.(func() time.Time)
	// cluster.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	cluster.UpdateDefaultUpdatedAt = clusterDescUpdatedAt.UpdateDefault.(func() time.Time)
	// clusterDescName is the schema descriptor for name field.
	clusterDescName := clusterFields[0].Descriptor()
	// cluster.NameValidator is a validator for the "name" field. It is called by the builders before save.
	cluster.NameValidator = func() func(string) error {
		validators := clusterDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
			validators[2].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// clusterDescDescription is the schema descriptor for description field.
	clusterDescDescription := clusterFields[1].Descriptor()
	// cluster.DefaultDescription holds the default value on creation for the description field.
	cluster.DefaultDescription = clusterDescDescription.Default.(string)
	// cluster.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	cluster.DescriptionValidator = clusterDescDescription.Validators[0].(func(string) error)
	clusterconnectionMixin := schema.ClusterConnection{}.Mixin()
	clusterconnectionMixinHooks1 := clusterconnectionMixin[1].Hooks()
	clusterconnection.Hooks[0] = clusterconnectionMixinHooks1[0]
	clusterconnectionMixinInters1 := clusterconnectionMixin[1].Interceptors()
	clusterconnection.Interceptors[0] = clusterconnectionMixinInters1[0]
	clusterconnectionMixinFields0 := clusterconnectionMixin[0].Fields()
	_ = clusterconnectionMixinFields0
	clusterconnectionFields := schema.ClusterConnection{}.Fields()
	_ = clusterconnectionFields
	// clusterconnectionDescCreatedAt is the schema descriptor for created_at field.
	clusterconnectionDescCreatedAt := clusterconnectionMixinFields0[0].Descriptor()
	// clusterconnection.DefaultCreatedAt holds the default value on creation for the created_at field.
	clusterconnection.DefaultCreatedAt = clusterconnectionDescCreatedAt.Default.(func() time.Time)
	// clusterconnectionDescUpdatedAt is the schema descriptor for updated_at field.
	clusterconnectionDescUpdatedAt := clusterconnectionMixinFields0[1].Descriptor()
	// clusterconnection.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	clusterconnection.DefaultUpdatedAt = clusterconnectionDescUpdatedAt.Default.(func() time.Time)
	// clusterconnection.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	clusterconnection.UpdateDefaultUpdatedAt = clusterconnectionDescUpdatedAt.UpdateDefault.(func() time.Time)
	// clusterconnectionDescAddress is the schema descriptor for address field.
	clusterconnectionDescAddress := clusterconnectionFields[1].Descriptor()
	// clusterconnection.AddressValidator is a validator for the "address" field. It is called by the builders before save.
	clusterconnection.AddressValidator = func() func(string) error {
		validators := clusterconnectionDescAddress.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(address string) error {
			for _, fn := range fns {
				if err := fn(address); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// clusterconnectionDescCa is the schema descriptor for ca field.
	clusterconnectionDescCa := clusterconnectionFields[3].Descriptor()
	// clusterconnection.DefaultCa holds the default value on creation for the ca field.
	clusterconnection.DefaultCa = clusterconnectionDescCa.Default.(string)
	// clusterconnectionDescCert is the schema descriptor for cert field.
	clusterconnectionDescCert := clusterconnectionFields[4].Descriptor()
	// clusterconnection.DefaultCert holds the default value on creation for the cert field.
	clusterconnection.DefaultCert = clusterconnectionDescCert.Default.(string)
	// clusterconnectionDescKey is the schema descriptor for key field.
	clusterconnectionDescKey := clusterconnectionFields[5].Descriptor()
	// clusterconnection.DefaultKey holds the default value on creation for the key field.
	clusterconnection.DefaultKey = clusterconnectionDescKey.Default.(string)
	// clusterconnectionDescToken is the schema descriptor for token field.
	clusterconnectionDescToken := clusterconnectionFields[6].Descriptor()
	// clusterconnection.DefaultToken holds the default value on creation for the token field.
	clusterconnection.DefaultToken = clusterconnectionDescToken.Default.(string)
	imagerepoMixin := schema.ImageRepo{}.Mixin()
	imagerepoMixinHooks1 := imagerepoMixin[1].Hooks()
	imagerepo.Hooks[0] = imagerepoMixinHooks1[0]
	imagerepoMixinInters1 := imagerepoMixin[1].Interceptors()
	imagerepo.Interceptors[0] = imagerepoMixinInters1[0]
	imagerepoMixinFields0 := imagerepoMixin[0].Fields()
	_ = imagerepoMixinFields0
	imagerepoFields := schema.ImageRepo{}.Fields()
	_ = imagerepoFields
	// imagerepoDescCreatedAt is the schema descriptor for created_at field.
	imagerepoDescCreatedAt := imagerepoMixinFields0[0].Descriptor()
	// imagerepo.DefaultCreatedAt holds the default value on creation for the created_at field.
	imagerepo.DefaultCreatedAt = imagerepoDescCreatedAt.Default.(func() time.Time)
	// imagerepoDescUpdatedAt is the schema descriptor for updated_at field.
	imagerepoDescUpdatedAt := imagerepoMixinFields0[1].Descriptor()
	// imagerepo.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	imagerepo.DefaultUpdatedAt = imagerepoDescUpdatedAt.Default.(func() time.Time)
	// imagerepo.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	imagerepo.UpdateDefaultUpdatedAt = imagerepoDescUpdatedAt.UpdateDefault.(func() time.Time)
	// imagerepoDescName is the schema descriptor for name field.
	imagerepoDescName := imagerepoFields[0].Descriptor()
	// imagerepo.NameValidator is a validator for the "name" field. It is called by the builders before save.
	imagerepo.NameValidator = func() func(string) error {
		validators := imagerepoDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
			validators[2].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// imagerepoDescDescription is the schema descriptor for description field.
	imagerepoDescDescription := imagerepoFields[1].Descriptor()
	// imagerepo.DefaultDescription holds the default value on creation for the description field.
	imagerepo.DefaultDescription = imagerepoDescDescription.Default.(string)
	// imagerepo.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	imagerepo.DescriptionValidator = imagerepoDescDescription.Validators[0].(func(string) error)
	// imagerepoDescURL is the schema descriptor for url field.
	imagerepoDescURL := imagerepoFields[2].Descriptor()
	// imagerepo.URLValidator is a validator for the "url" field. It is called by the builders before save.
	imagerepo.URLValidator = imagerepoDescURL.Validators[0].(func(string) error)
	// imagerepoDescUsername is the schema descriptor for username field.
	imagerepoDescUsername := imagerepoFields[3].Descriptor()
	// imagerepo.DefaultUsername holds the default value on creation for the username field.
	imagerepo.DefaultUsername = imagerepoDescUsername.Default.(string)
	// imagerepo.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	imagerepo.UsernameValidator = imagerepoDescUsername.Validators[0].(func(string) error)
	// imagerepoDescPassword is the schema descriptor for password field.
	imagerepoDescPassword := imagerepoFields[4].Descriptor()
	// imagerepo.DefaultPassword holds the default value on creation for the password field.
	imagerepo.DefaultPassword = imagerepoDescPassword.Default.(string)
	// imagerepo.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	imagerepo.PasswordValidator = imagerepoDescPassword.Validators[0].(func(string) error)
}

const (
	Version = "v0.14.5"                                         // Version of ent codegen.
	Sum     = "h1:Rj2WOYJtCkWyFo6a+5wB3EfBRP0rnx1fMk6gGA0UUe4=" // Sum of ent codegen.
)

// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"api-server/internal/data/generated/cluster"
	"api-server/internal/data/generated/clustersecurity"
	"api-server/internal/data/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	clusterMixin := schema.Cluster{}.Mixin()
	clusterMixinHooks1 := clusterMixin[1].Hooks()
	cluster.Hooks[0] = clusterMixinHooks1[0]
	clusterMixinInters1 := clusterMixin[1].Interceptors()
	cluster.Interceptors[0] = clusterMixinInters1[0]
	clusterMixinFields0 := clusterMixin[0].Fields()
	_ = clusterMixinFields0
	clusterFields := schema.Cluster{}.Fields()
	_ = clusterFields
	// clusterDescCreatedAt is the schema descriptor for created_at field.
	clusterDescCreatedAt := clusterMixinFields0[0].Descriptor()
	// cluster.DefaultCreatedAt holds the default value on creation for the created_at field.
	cluster.DefaultCreatedAt = clusterDescCreatedAt.Default.(func() time.Time)
	// clusterDescUpdatedAt is the schema descriptor for updated_at field.
	clusterDescUpdatedAt := clusterMixinFields0[1].Descriptor()
	// cluster.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	cluster.DefaultUpdatedAt = clusterDescUpdatedAt.Default.(func() time.Time)
	// cluster.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	cluster.UpdateDefaultUpdatedAt = clusterDescUpdatedAt.UpdateDefault.(func() time.Time)
	// clusterDescName is the schema descriptor for name field.
	clusterDescName := clusterFields[0].Descriptor()
	// cluster.NameValidator is a validator for the "name" field. It is called by the builders before save.
	cluster.NameValidator = func() func(string) error {
		validators := clusterDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
			validators[2].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// clusterDescDescription is the schema descriptor for description field.
	clusterDescDescription := clusterFields[1].Descriptor()
	// cluster.DefaultDescription holds the default value on creation for the description field.
	cluster.DefaultDescription = clusterDescDescription.Default.(string)
	// cluster.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	cluster.DescriptionValidator = clusterDescDescription.Validators[0].(func(string) error)
	// clusterDescAddress is the schema descriptor for address field.
	clusterDescAddress := clusterFields[2].Descriptor()
	// cluster.AddressValidator is a validator for the "address" field. It is called by the builders before save.
	cluster.AddressValidator = func() func(string) error {
		validators := clusterDescAddress.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(address string) error {
			for _, fn := range fns {
				if err := fn(address); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	clustersecurityMixin := schema.ClusterSecurity{}.Mixin()
	clustersecurityMixinHooks1 := clustersecurityMixin[1].Hooks()
	clustersecurity.Hooks[0] = clustersecurityMixinHooks1[0]
	clustersecurityMixinInters1 := clustersecurityMixin[1].Interceptors()
	clustersecurity.Interceptors[0] = clustersecurityMixinInters1[0]
	clustersecurityMixinFields0 := clustersecurityMixin[0].Fields()
	_ = clustersecurityMixinFields0
	clustersecurityFields := schema.ClusterSecurity{}.Fields()
	_ = clustersecurityFields
	// clustersecurityDescCreatedAt is the schema descriptor for created_at field.
	clustersecurityDescCreatedAt := clustersecurityMixinFields0[0].Descriptor()
	// clustersecurity.DefaultCreatedAt holds the default value on creation for the created_at field.
	clustersecurity.DefaultCreatedAt = clustersecurityDescCreatedAt.Default.(func() time.Time)
	// clustersecurityDescUpdatedAt is the schema descriptor for updated_at field.
	clustersecurityDescUpdatedAt := clustersecurityMixinFields0[1].Descriptor()
	// clustersecurity.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	clustersecurity.DefaultUpdatedAt = clustersecurityDescUpdatedAt.Default.(func() time.Time)
	// clustersecurity.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	clustersecurity.UpdateDefaultUpdatedAt = clustersecurityDescUpdatedAt.UpdateDefault.(func() time.Time)
	// clustersecurityDescCa is the schema descriptor for ca field.
	clustersecurityDescCa := clustersecurityFields[2].Descriptor()
	// clustersecurity.DefaultCa holds the default value on creation for the ca field.
	clustersecurity.DefaultCa = clustersecurityDescCa.Default.(string)
	// clustersecurityDescCert is the schema descriptor for cert field.
	clustersecurityDescCert := clustersecurityFields[3].Descriptor()
	// clustersecurity.DefaultCert holds the default value on creation for the cert field.
	clustersecurity.DefaultCert = clustersecurityDescCert.Default.(string)
	// clustersecurityDescKey is the schema descriptor for key field.
	clustersecurityDescKey := clustersecurityFields[4].Descriptor()
	// clustersecurity.DefaultKey holds the default value on creation for the key field.
	clustersecurity.DefaultKey = clustersecurityDescKey.Default.(string)
	// clustersecurityDescToken is the schema descriptor for token field.
	clustersecurityDescToken := clustersecurityFields[5].Descriptor()
	// clustersecurity.DefaultToken holds the default value on creation for the token field.
	clustersecurity.DefaultToken = clustersecurityDescToken.Default.(string)
}

const (
	Version = "v0.14.5"                                         // Version of ent codegen.
	Sum     = "h1:Rj2WOYJtCkWyFo6a+5wB3EfBRP0rnx1fMk6gGA0UUe4=" // Sum of ent codegen.
)

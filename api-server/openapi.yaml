# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/v1/app/{appName}/build/task:
        post:
            tags:
                - BuildTaskService
            operationId: BuildTaskService_Create
            parameters:
                - name: appName
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.build.task.CreateBuildTaskRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/app/{name}/build/settings:
        get:
            tags:
                - BuildSettingsService
            operationId: BuildSettingsService_GetBuildSettings
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.build.settings.BuildSettings'
        post:
            tags:
                - BuildSettingsService
            operationId: BuildSettingsService_ApplyBuildSettings
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.build.settings.BuildSettings'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/app/{name}/build/task:
        get:
            tags:
                - BuildTaskService
            operationId: BuildTaskService_List
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.build.task.ListBuildTaskResponse'
    /api/v1/app/{name}/git:
        get:
            tags:
                - GitService
            operationId: GitService_GetGitSettings
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.git.GitSettings'
    /api/v1/app/{name}/git/branch:
        get:
            tags:
                - GitService
            operationId: GitService_ListBranches
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.git.ListBranchesResponse'
    /api/v1/app/{name}/git/branch/{branchName}/commit:
        get:
            tags:
                - GitService
            operationId: GitService_ListCommits
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
                - name: branchName
                  in: path
                  required: true
                  schema:
                    type: string
                - name: page.current
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: page.size
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.git.ListCommitsResponse'
    /api/v1/application:
        get:
            tags:
                - ApplicationService
            operationId: ApplicationService_ListApplications
            parameters:
                - name: page.current
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: page.size
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.application.ListApplicationsResponse'
        post:
            tags:
                - ApplicationService
            operationId: ApplicationService_CreateApplication
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.application.Application'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/application/{name}:
        get:
            tags:
                - ApplicationService
            operationId: ApplicationService_GetApplication
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.application.Application'
        put:
            tags:
                - ApplicationService
            operationId: ApplicationService_UpdateApplication
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.application.Application'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
        delete:
            tags:
                - ApplicationService
            operationId: ApplicationService_DeleteApplication
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/cluster:
        get:
            tags:
                - ClusterService
            operationId: ClusterService_ListClusters
            parameters:
                - name: page.current
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: page.size
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.cluster.ListClustersResponse'
        post:
            tags:
                - ClusterService
            operationId: ClusterService_CreateCluster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.cluster.Cluster'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/cluster/connection/test:
        post:
            tags:
                - ClusterService
            operationId: ClusterService_TestConnection
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.cluster.Connection'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.cluster.TestConnectionResponse'
    /api/v1/cluster/kube/config:
        post:
            tags:
                - ClusterService
            operationId: ClusterService_ResolveKubeConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.cluster.ResolveKubeConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.cluster.ResolveKubeConfigResponse'
    /api/v1/cluster/operator/test:
        post:
            tags:
                - ClusterService
            operationId: ClusterService_TestOperator
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.cluster.Connection'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.cluster.TestOperatorResponse'
    /api/v1/cluster/{id}:
        get:
            tags:
                - ClusterService
            operationId: ClusterService_GetCluster
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.cluster.Cluster'
        put:
            tags:
                - ClusterService
            operationId: ClusterService_UpdateCluster
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.cluster.Cluster'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
        delete:
            tags:
                - ClusterService
            operationId: ClusterService_DeleteCluster
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/git/repo:
        get:
            tags:
                - GitService
            operationId: GitService_ListGitRepos
            parameters:
                - name: page.current
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: page.size
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.git.ListGitReposResponse'
        post:
            tags:
                - GitService
            operationId: GitService_CreateGitRepo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.git.GitRepo'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/git/repo/{name}:
        get:
            tags:
                - GitService
            operationId: GitService_GetGitRepo
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.git.GitRepo'
        put:
            tags:
                - GitService
            operationId: GitService_UpdateGitRepo
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.git.GitRepo'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
        delete:
            tags:
                - GitService
            operationId: GitService_DeleteGitRepo
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/image/repo:
        get:
            tags:
                - ImageService
            operationId: ImageService_ListImageRepos
            parameters:
                - name: page.current
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: page.size
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.image.ListImageReposResponse'
        post:
            tags:
                - ImageService
            operationId: ImageService_CreateImageRepo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.image.ImageRepo'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/image/repo/{name}:
        get:
            tags:
                - ImageService
            operationId: ImageService_GetImageRepo
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.image.ImageRepo'
        put:
            tags:
                - ImageService
            operationId: ImageService_UpdateImageRepo
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.image.ImageRepo'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
        delete:
            tags:
                - ImageService
            operationId: ImageService_DeleteImageRepo
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
components:
    schemas:
        api.v1.application.Application:
            type: object
            properties:
                id:
                    type: string
                clusterId:
                    type: string
                name:
                    type: string
                description:
                    type: string
                createdAt:
                    readOnly: true
                    type: string
                    format: date-time
                updateAt:
                    readOnly: true
                    type: string
                    format: date-time
        api.v1.application.ListApplicationsResponse:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.v1.common.Pagination'
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.v1.application.Application'
        api.v1.build.settings.BuildSettings:
            required:
                - git
                - image
                - dockerfile
            type: object
            properties:
                git:
                    $ref: '#/components/schemas/api.v1.build.settings.BuildSettings_GitSettings'
                image:
                    $ref: '#/components/schemas/api.v1.build.settings.BuildSettings_ImageSettings'
                dockerfile:
                    type: string
        api.v1.build.settings.BuildSettings_GitSettings:
            required:
                - repoName
                - repoPath
            type: object
            properties:
                repoName:
                    type: string
                repoPath:
                    type: string
                url:
                    readOnly: true
                    type: string
        api.v1.build.settings.BuildSettings_ImageSettings:
            required:
                - repoName
            type: object
            properties:
                repoName:
                    type: string
                url:
                    readOnly: true
                    type: string
        api.v1.build.task.BuildTask:
            type: object
            properties:
                name:
                    type: string
                status:
                    enum:
                        - STATUS_UNSPECIFIED
                        - STATUS_RUNNING
                        - STATUS_COMPLETE
                        - STATUS_FAILED
                        - STATUS_SUSPENDED
                        - STATUS_FAILURE_TARGET
                        - STATUS_SUCCESS_CRITERIA_MET
                    type: string
                    format: enum
                createdAt:
                    type: string
                    format: date-time
        api.v1.build.task.CreateBuildTaskRequest:
            required:
                - appName
                - commit
            type: object
            properties:
                appName:
                    type: string
                commit:
                    type: string
        api.v1.build.task.ListBuildTaskResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.v1.build.task.BuildTask'
        api.v1.cluster.Cluster:
            required:
                - name
                - connection
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                connection:
                    $ref: '#/components/schemas/api.v1.cluster.Connection'
                createdAt:
                    readOnly: true
                    type: string
                    format: date-time
                updatedAt:
                    readOnly: true
                    type: string
                    format: date-time
        api.v1.cluster.Connection:
            required:
                - address
                - type
            type: object
            properties:
                address:
                    type: string
                ca:
                    type: string
                type:
                    enum:
                        - UNSPECIFIED
                        - NONE
                        - TLS_CERT
                        - TLS_TOKEN
                    type: string
                    format: enum
                cert:
                    type: string
                key:
                    type: string
                token:
                    type: string
        api.v1.cluster.ListClustersResponse:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.v1.common.Pagination'
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.v1.cluster.Cluster'
        api.v1.cluster.ResolveKubeConfigRequest:
            required:
                - content
            type: object
            properties:
                content:
                    type: string
        api.v1.cluster.ResolveKubeConfigResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.v1.cluster.ResolveKubeConfigResponse_Context'
        api.v1.cluster.ResolveKubeConfigResponse_Cluster:
            required:
                - server
            type: object
            properties:
                server:
                    type: string
                ca:
                    type: string
        api.v1.cluster.ResolveKubeConfigResponse_Context:
            type: object
            properties:
                name:
                    type: string
                namespace:
                    type: string
                current:
                    type: boolean
                cluster:
                    $ref: '#/components/schemas/api.v1.cluster.ResolveKubeConfigResponse_Cluster'
                user:
                    $ref: '#/components/schemas/api.v1.cluster.ResolveKubeConfigResponse_User'
        api.v1.cluster.ResolveKubeConfigResponse_User:
            type: object
            properties:
                cert:
                    type: string
                key:
                    type: string
        api.v1.cluster.TestConnectionResponse:
            type: object
            properties:
                version:
                    type: string
        api.v1.cluster.TestOperatorResponse:
            type: object
            properties: {}
        api.v1.common.Pagination:
            type: object
            properties:
                current:
                    type: integer
                    format: uint32
                size:
                    type: integer
                    format: uint32
                total:
                    type: integer
                    format: uint32
                totalPage:
                    type: integer
                    format: uint32
        api.v1.git.GitRepo:
            required:
                - name
                - url
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                url:
                    type: string
                token:
                    type: string
                createdAt:
                    readOnly: true
                    type: string
                    format: date-time
                updatedAt:
                    readOnly: true
                    type: string
                    format: date-time
        api.v1.git.GitSettings:
            required:
                - url
            type: object
            properties:
                url:
                    type: string
                token:
                    type: string
        api.v1.git.ListBranchesResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        type: string
        api.v1.git.ListCommitsResponse:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.v1.common.Pagination'
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.v1.git.ListCommitsResponse_Commit'
        api.v1.git.ListCommitsResponse_Commit:
            type: object
            properties:
                sha:
                    type: string
                message:
                    type: string
                createdAt:
                    type: string
                    format: date-time
        api.v1.git.ListGitReposResponse:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.v1.common.Pagination'
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.v1.git.GitRepo'
        api.v1.image.ImageRepo:
            required:
                - name
                - url
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                url:
                    type: string
                username:
                    type: string
                password:
                    type: string
                createdAt:
                    readOnly: true
                    type: string
                    format: date-time
                updatedAt:
                    readOnly: true
                    type: string
                    format: date-time
        api.v1.image.ListImageReposResponse:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.v1.common.Pagination'
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.v1.image.ImageRepo'
tags:
    - name: ApplicationService
    - name: BuildSettingsService
    - name: BuildTaskService
    - name: ClusterService
    - name: GitService
    - name: ImageService
